version: '3'
# Definimos los servicios/container para el PostgreSQL y Redis.
services:
  # 1°) Servicio para el PostgreSQL
  sql-db:
    image: postgres:15.2
    container_name: postgre-best-travel
    restart: always
    # /docker-entrypoint-initdb.d/ : Cuando el container se ejecute por primera vez buscará y ejecutará los scripts SQL indicados.
    volumes:
      - ./db/sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./db/sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      - POSTGRES_DB=best_travel
      - POSTGRES_USER=rminaya
      - POSTGRES_PASSWORD=cibertec
    ports:
      - "5433:5432"
  # 2°) Servicio para el servidor Redis
  cache-db:
    image: redis:6.2-alpine
    container_name: best_travel_cache
    restart: always
    ports:
     - "6379:6379"
     # Asignamos el nivel del logging como warning y la palabra "debuggeandoideas" como el password al servidor
    command: redis-server --loglevel warning --requirepass debuggeandoideas
  # 2°) Servicio para el MongoDB
  document-db:
    image: mongo:6.0.4
    restart: always
    container_name: best_travel_users
    environment:
      MONGO_INITDB_ROOT_USERNAME: master
      MONGO_INITDB_ROOT_PASSWORD: debuggeandoideas
      # Esta variable de entorno permite crear inmediatamente una base de datos al iniciarse el container.
      # Se debe indicar el script de la base de datos y asignarla al volumen del container "/docker-entrypoint-initdb"
      MONGO_INITDB_DATABASE: users
    ports:
      - "27019:27017"
    volumes:
      - ./db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro